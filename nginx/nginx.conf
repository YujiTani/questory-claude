events {
    worker_connections 1024;
}

# httpに関する設定
http {
    upstream nextjs_upstream {
        server web:3010;
    }

    upstream rails_upstream {
        server api:3000;
    }

    server {
        listen 80;
        server_name localhost;

        error_page 404 /404.html;
        error_page 500 502 503 504 /503.html;

        location / {
            # リクエストの転送先を指定
            proxy_pass http://nextjs_upstream;
            # proxy_set_header ディレクティブは、オリジナルのリクエスト情報をプロキシ先に伝える
            proxy_set_header Host $host; # リクエストのホストヘッダーを設定
            proxy_set_header X-Real-IP $remote_addr; # リクエストの実際のIPアドレスを設定
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # リクエストのX-Forwarded-Forヘッダーを設定
            proxy_set_header X-Forwarded-Proto $scheme; # リクエストのX-Forwarded-Protoヘッダーを設定
        }

        location /api {
            # /apiプレフィックスを取り除いて、リクエストする設定
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://rails_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket接続のサポート（Next.jsのホットリロード対応、開発サーバー用）
        location /_next/webpack-hmr {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # 特定のページをエラーページにする場合に使用する
        # location = /404 {
        #     return 404
        # }

        location = /404.html {
            root /var/www/html/error_pages;
            internal;
        }

        location = /503.html {
            root /var/www/html/error_pages;
            internal;
        }
    }
}
