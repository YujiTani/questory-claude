name: DockerHub Push and Scan

on:
  push:
    branches:
      - prodaction
  workflow_dispatch:

# パイプエラーが拾えるので、機械的に追加
defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REGISTRY: yuzunosk55
  WEB_IMAGE_NAME: questory-web
  API_IMAGE_NAME: questory-api
  ACTIONS_STEP_DEBUG: true

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # ジョブがタイムアウトするまでの時間

    strategy:
      # コンテナの並列実行
      matrix:
        include:
          - service: web
            context: ./next
            dockerfile: ./next/Dockerfile

          - service: api
            context: ./rails
            dockerfile: ./rails/Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate custom tag
        run: |
          DATE=$(date +%Y%m%d)
          SHA=${GITHUB_SHA::7}
          echo "IMAGE_TAG=${DATE}-${SHA}" >> "$GITHUB_ENV"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ matrix.service == 'web' && env.WEB_IMAGE_NAME || env.API_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          outputs: type=docker

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.DOCKER_REGISTRY }}/${{ matrix.service == 'web' && env.WEB_IMAGE_NAME || env.API_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: "0"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"
          vuln-type: "os,library"
          output: trivy-results-${{ matrix.service }}.txt

      - name: Display Trivy scan results
        run: |
          echo "Scan results for ${{ matrix.service }}:"
          cat trivy-results-${{ matrix.service }}.txt
